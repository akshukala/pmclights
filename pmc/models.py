# -*- coding: utf-8 -*-
from django.db import models
from django.contrib.auth.models import User
from unittest.util import _MAX_LENGTH

class Userdata(models.Model):
    user = models.ForeignKey(User)
    authority = models.CharField(max_length=255)
    role_division = models.CharField(max_length=255, blank=True, null=True)
    role_subdivision = models.CharField(max_length=255, blank=True, null=True)
    password = models.CharField(max_length=255, blank=True, null=True)
    created_by = models.CharField(max_length=255)
    created_on = models.DateTimeField(auto_now_add=True)
    modified_by = models.CharField(max_length=255)
    modified_on = models.DateTimeField(auto_now=True)
    is_active = models.BooleanField(default=True)

class Division(models.Model):
    division_name = models.CharField(max_length=255)
    created_by = models.CharField(max_length=255)
    created_on = models.DateTimeField(auto_now_add=True)
    modified_by = models.CharField(max_length=255)
    modified_on = models.DateTimeField(auto_now=True)
    is_active = models.BooleanField(default=True)

class Subdivision(models.Model):
    division = models.ForeignKey(Division)
    subdivision_name = models.CharField(max_length=255)
    created_by = models.CharField(max_length=255)
    created_on = models.DateTimeField(auto_now_add=True)
    modified_by = models.CharField(max_length=255)
    modified_on = models.DateTimeField(auto_now=True)
    is_active = models.BooleanField(default=True)

class Feeder(models.Model):
    subdivision = models.ForeignKey(Subdivision)
    feeder_name = models.CharField(max_length=255)
    latitude = models.CharField(max_length=50, blank=True, null=True)
    longitude = models.CharField(max_length=50, blank=True, null=True)
    rct_ratio = models.CharField(max_length=20, blank=True, null=True)
    yct_ratio = models.CharField(max_length=20, blank=True, null=True)
    bct_ratio = models.CharField(max_length=20, blank=True, null=True)
    r_volt_ul = models.CharField(max_length=50, blank=True, null=True)
    r_volt_ll = models.CharField(max_length=50, blank=True, null=True)
    r_current_ul = models.CharField(max_length=50, blank=True, null=True)
    r_current_ll = models.CharField(max_length=50, blank=True, null=True)
    y_volt_ul = models.CharField(max_length=50, blank=True, null=True)
    y_volt_ll = models.CharField(max_length=50, blank=True, null=True)
    y_current_ul = models.CharField(max_length=50, blank=True, null=True)
    y_current_ll = models.CharField(max_length=50, blank=True, null=True)
    b_volt_ul = models.CharField(max_length=50, blank=True, null=True)
    b_volt_ll = models.CharField(max_length=50, blank=True, null=True)
    b_current_ul = models.CharField(max_length=50, blank=True, null=True)
    b_current_ll = models.CharField(max_length=50, blank=True, null=True)
    created_by = models.CharField(max_length=50)
    created_on = models.DateTimeField(auto_now_add=True)
    modified_by = models.CharField(max_length=50)
    modified_on = models.DateTimeField(auto_now=True)
    is_active = models.BooleanField(default=True)

class Feederdata(models.Model):
    SIGNAL_TYPE = (('N', "No Signal"),
                      ('W', "Weak"),
                      ('G', "Good"),
                      ('S', "Strong"))
    feeder = models.ForeignKey(Feeder)
    twlon_time = models.CharField(max_length=20)
    dimon_time = models.CharField(max_length=20)
    dimoff_time = models.CharField(max_length=20)
    twloff_time = models.CharField(max_length=20)
    auto_mode = models.BooleanField(default=False)
    man_mode = models.BooleanField(default=False)
    date_filed = models.DateTimeField()
    lp_off1 = models.CharField(max_length=20, blank=True, null=True)
    lp_on1 = models.CharField(max_length=20, blank=True, null=True)
    lp_off2 = models.CharField(max_length=20, blank=True, null=True)
    lp_on2 = models.CharField(max_length=20, blank=True, null=True)
    # red
    r_voltage = models.CharField(max_length=20)
    r_current = models.CharField(max_length=20)
    r_frequency = models.CharField(max_length=20)
    r_pf = models.CharField(max_length=20)
    r_ap = models.CharField(max_length=20)
    r_app = models.CharField(max_length=20)
    r_ph_rotio = models.CharField(max_length=20)
    r_on = models.CharField(max_length=20)
    r_off = models.CharField(max_length=20)
    r_vf = models.BooleanField(default=False)
    r_cf = models.BooleanField(default=False)
    r_ff = models.BooleanField(default=False)
    # yellow
    y_voltage = models.CharField(max_length=20)
    y_current = models.CharField(max_length=20)
    y_frequency = models.CharField(max_length=20)
    y_pf = models.CharField(max_length=20)
    y_ap = models.CharField(max_length=20)
    y_app = models.CharField(max_length=20)
    y_ph_rotio = models.CharField(max_length=20)
    y_on = models.CharField(max_length=20)
    y_off = models.CharField(max_length=20)
    y_vf = models.BooleanField(default=False)
    y_cf = models.BooleanField(default=False)
    y_ff = models.BooleanField(default=False)
    # blue
    b_voltage = models.CharField(max_length=20)
    b_current = models.CharField(max_length=20)
    b_frequency = models.CharField(max_length=20)
    b_pf = models.CharField(max_length=20)
    b_ap = models.CharField(max_length=20)
    b_app = models.CharField(max_length=20)
    b_ph_rotio = models.CharField(max_length=20)
    b_on = models.CharField(max_length=20)
    b_off = models.CharField(max_length=20)
    b_vf = models.BooleanField(default=False)
    b_cf = models.BooleanField(default=False)
    b_ff = models.BooleanField(default=False)
    meter_kwh = models.CharField(max_length=20, blank=True, null=True)
    meter_kva = models.CharField(max_length=20, blank=True, null=True)
    dof = models.BooleanField(default=False)
    dimming_percent = models.CharField(max_length=20, blank=True, null=True)
    signal_strength = models.CharField(max_length=10, choices=SIGNAL_TYPE, default="N")
    spare_field3 = models.CharField(max_length=20, blank=True, null=True)
    created_by = models.CharField(max_length=255)
    created_on = models.DateTimeField(auto_now_add=True)
    modified_by = models.CharField(max_length=255)
    modified_on = models.DateTimeField(auto_now=True)
    is_active = models.BooleanField(default=True)

class Alarm(models.Model):
    feeder = models.ForeignKey(Feeder, blank=True, null=True)
    fault_type = models.CharField(max_length=255)
    number_1 = models.CharField(max_length=20, default="0000000000")
    number_2 = models.CharField(max_length=20, default="0000000000")
    number_3 = models.CharField(max_length=20, default="0000000000")
    number_4 = models.CharField(max_length=20, default="0000000000")
    number_5 = models.CharField(max_length=20, default="0000000000")
    number_6 = models.CharField(max_length=20, default="0000000000")
    fault_occur = models.BooleanField(default=False)
    modified_on = models.DateTimeField(auto_now=True)

class SendToClient(models.Model):
    feeder = models.ForeignKey(Feeder)
    mode = models.CharField(max_length=20)
    output_code = models.CharField(max_length=20)
    created_on = models.DateTimeField(auto_now_add=True)
    is_send = models.BooleanField(default=False)
    update_time = models.CharField(max_length=55,blank=True)

class ErrorLog(models.Model):
    error_data = models.TextField(blank=True, null=True)
    created_on = models.DateTimeField(auto_now_add=True)